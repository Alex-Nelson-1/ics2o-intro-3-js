# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          ##################################################

# Run Mr Coxall's Super Linter against code base #

##################################################



---

name: Mr Coxall's Super Linter



on: [push, pull_request]



jobs:

  run-linters:

    name: Mr Coxall's Super Linter

    runs-on: ubuntu-latest



    steps:

      - name: Check out Git repository

        uses: actions/checkout@main



      # remove section if you do not have any htm, js or ts files!

      - name: Prettify code

        uses: Mr-Coxall/prettier_action@main

        with:

          # run Prettier and change code that needs fixing, before next section

          prettier_options: --write **/*.{html,css,js,ts,jsx,tsx,json}

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      - name: Run GitHub Super Linter

        uses: github/super-linter@main

        env:

          VALIDATE_ALL_CODEBASE: true

          LINTER_RULES_PATH: /

          VALIDATE_CLANG_FORMAT: false

          VALIDATE_JAVASCRIPT_STANDARD: false

          VALIDATE_PYTHON_FLAKE8: false

          VALIDATE_GITLEAKS: false # for secrets detection

          VALIDATE_JSCPD: false # for copy and paste detection

          DEFAULT_BRANCH: main

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
